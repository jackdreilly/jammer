name: CI
on:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ hashFiles('poetry.lock') }}-${{ hashFiles('pyproject.toml') }}
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('poetry.lock') }}-${{ hashFiles('pyproject.toml') }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.11
      - name: Poetry install
        run: poetry install
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Black
        run: task black-lint
      - name: autoflake
        run: task autoflake-lint
      - name: Pytest
        run: task test
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: "report_unit.xml"
      - name: Archive midi
        uses: actions/upload-artifact@v2
        with:
          name: test-midi
          path: test.midi
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: .cov_html
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Deploy
        uses: google-github-actions/deploy-cloudrun@main
        with:
          source: "."
          service: jammer
      # - name: Publish
      #   run: poetry publish --build
